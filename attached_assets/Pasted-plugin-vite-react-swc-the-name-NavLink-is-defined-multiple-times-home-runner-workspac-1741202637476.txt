plugin:vite:react-swc] × the name `NavLink` is defined multiple times
     ╭─[/home/runner/workspace/src/components/layout/Sidebar.tsx:3:1]
   1 │ 
   2 │ import React from "react";
   3 │ import { NavLink } from "react-router-dom";
     ·          ───┬───
     ·             ╰── previous definition of `NavLink` here
   4 │ import {
   5 │   LayoutDashboard,
   6 │   Users,
   7 │   PackageSearch,
   8 │   ClipboardList,
   9 │   BarChart3,
  10 │   Settings,
  11 │   BookUser,
  12 │   MessageSquare,
  13 │   CalendarClock,
  14 │   Building2,
  15 │   TrendingUp,
  16 │   X
  17 │ } from "lucide-react";
  18 │ import { Button } from "@/components/ui/button";
  19 │ import { ScrollArea } from "@/components/ui/scroll-area";
  20 │ import { Separator } from "@/components/ui/separator";
  21 │ import { cn } from "@/lib/utils";
  22 │ import { useIsMobile } from "@/hooks/use-mobile";
  23 │ 
  24 │ interface SidebarProps {
  25 │   isOpen: boolean;
  26 │   onClose: () => void;
  27 │ }
  28 │ 
  29 │ interface SidebarItem {
  30 │   title: string;
  31 │   icon: React.ReactNode;
  32 │   href: string;
  33 │ }
  34 │ 
  35 │ const mainItems: SidebarItem[] = [
  36 │   {
  37 │     title: "Dashboard",
  38 │     icon: <LayoutDashboard className="h-5 w-5" />,
  39 │     href: "/",
  40 │   },
  41 │   {
  42 │     title: "Leads",
  43 │     icon: <Users className="h-5 w-5" />,
  44 │     href: "/leads",
  45 │   },
  46 │   {
  47 │     title: "Manufacturers",
  48 │     icon: <Building2 className="h-5 w-5" />,
  49 │     href: "/manufacturers",
  50 │   },
  51 │   {
  52 │     title: "Orders",
  53 │     icon: <PackageSearch className="h-5 w-5" />,
  54 │     href: "/orders",
  55 │   },
  56 │   {
  57 │     title: "Documents",
  58 │     icon: <ClipboardList className="h-5 w-5" />,
  59 │     href: "/documents",
  60 │   },
  61 │ ];
  62 │ 
  63 │ const salesItems: SidebarItem[] = [
  64 │   {
  65 │     title: "Calendar",
  66 │     icon: <CalendarClock className="h-5 w-5" />,
  67 │     href: "/calendar",
  68 │   },
  69 │   {
  70 │     title: "Contacts",
  71 │     icon: <BookUser className="h-5 w-5" />,
  72 │     href: "/contacts",
  73 │   },
  74 │   {
  75 │     title: "Messages",
  76 │     icon: <MessageSquare className="h-5 w-5" />,
  77 │     href: "/messages",
  78 │   },
  79 │ ];
  80 │ 
  81 │ const insightItems: SidebarItem[] = [
  82 │   {
  83 │     title: "Performance",
  84 │     icon: <TrendingUp className="h-5 w-5" />,
  85 │     href: "/performance",
  86 │   },
  87 │   {
  88 │     title: "Reports",
  89 │     icon: <BarChart3 className="h-5 w-5" />,
  90 │     href: "/reports",
  91 │   },
  92 │   {
  93 │     title: "Settings",
  94 │     icon: <Settings className="h-5 w-5" />,
  95 │     href: "/settings",
  96 │   },
  97 │ ];
  98 │ 
  99 │ const Sidebar: React.FC<SidebarProps> = ({ isOpen, onClose }) => {
 100 │   const isMobile = useIsMobile();
 101 │   
 102 │   return (
 103 │     <>
 104 │       {isMobile && isOpen && (
 105 │         <div 
 106 │           className="fixed inset-0 bg-black/30 z-40 transition-opacity duration-300"
 107 │           onClick={onClose}
 108 │         />
 109 │       )}
 110 │       <aside
 111 │         className={cn(
 112 │           "fixed top-0 bottom-0 z-50 w-[270px] border-r bg-card transition-transform duration-300 ease-in-out",
 113 │           isOpen || !isMobile ? "translate-x-0" : "-translate-x-full"
 114 │         )}
 115 │       >
 116 │         <div className="flex h-16 items-center px-4 border-b">
 117 │           <div className="flex items-center gap-2">
 118 │             <div className="inline-flex h-8 w-8 items-center justify-center rounded-md bg-primary">
 119 │               <svg
 120 │                 xmlns="http://www.w3.org/2000/svg"
 121 │                 viewBox="0 0 24 24"
 122 │                 fill="none"
 123 │                 stroke="currentColor"
 124 │                 strokeWidth="2"
 125 │                 strokeLinecap="round"
 126 │                 strokeLinejoin="round"
 127 │                 className="h-5 w-5 text-white"
 128 │               >
 129 │                 <path d="M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z" />
 130 │                 <path d="m9 12 2 2 4-4" />
 131 │               </svg>
 132 │             </div>
 133 │             <span className="text-xl font-bold">Pavittar Pharma</span>
 134 │           </div>
 135 │           
 136 │           {isMobile && (
 137 │             <Button variant="ghost" size="icon" className="ml-auto" onClick={onClose}>
 138 │               <X className="h-5 w-5" />
 139 │             </Button>
 140 │           )}
 141 │         </div>
 142 │         
 143 │         <ScrollArea className="h-[calc(100vh-64px)] scrollbar-fancy">
 144 │           <div className="space-y-4 py-4">
 145 │             <div className="px-4 py-2">
 146 │               <h2 className="px-2 text-xs font-semibold tracking-tight text-muted-foreground">
 147 │                 MAIN
 148 │               </h2>
 149 │               <div className="mt-2 space-y-1">
 150 │                 {mainItems.map((item) => (
 151 │                   <NavLink
 152 │                     key={item.href}
 153 │                     to={item.href}
 154 │                     className={({ isActive }) =>
 155 │                       cn("nav-item", isActive && "nav-item-active")
 156 │                     }
 157 │                     onClick={isMobile ? onClose : undefined}
 158 │                   >
 159 │                     {item.icon}
 160 │                     <span>{item.title}</span>
 161 │                   </NavLink>
 162 │                 ))}
 163 │               </div>
 164 │             </div>
 165 │             
 166 │             <Separator className="mx-4" />
 167 │             
 168 │             <div className="px-4 py-2">
 169 │               <h2 className="px-2 text-xs font-semibold tracking-tight text-muted-foreground">
 170 │                 SALES TOOLS
 171 │               </h2>
 172 │               <div className="mt-2 space-y-1">
 173 │                 {salesItems.map((item) => (
 174 │                   <NavLink
 175 │                     key={item.href}
 176 │                     to={item.href}
 177 │                     className={({ isActive }) =>
 178 │                       cn("nav-item", isActive && "nav-item-active")
 179 │                     }
 180 │                     onClick={isMobile ? onClose : undefined}
 181 │                   >
 182 │                     {item.icon}
 183 │                     <span>{item.title}</span>
 184 │                   </NavLink>
 185 │                 ))}
 186 │               </div>
 187 │             </div>
 188 │             
 189 │             <Separator className="mx-4" />
 190 │             
 191 │             <div className="px-4 py-2">
 192 │               <h2 className="px-2 text-xs font-semibold tracking-tight text-muted-foreground">
 193 │                 INSIGHTS
 194 │               </h2>
 195 │               <div className="mt-2 space-y-1">
 196 │                 {insightItems.map((item) => (
 197 │                   <NavLink
 198 │                     key={item.href}
 199 │                     to={item.href}
 200 │                     className={({ isActive }) =>
 201 │                       cn("nav-item", isActive && "nav-item-active")
 202 │                     }
 203 │                     onClick={isMobile ? onClose : undefined}
 204 │                   >
 205 │                     {item.icon}
 206 │                     <span>{item.title}</span>
 207 │                   </NavLink>
 208 │                 ))}
 209 │               </div>
 210 │             </div>
 211 │             
 212 │             <Separator className="mx-4" />
 213 │             
 214 │             <div className="p-4 mt-6">
 215 │               <div className="rounded-md bg-muted p-3">
 216 │                 <div className="flex flex-col items-center text-center">
 217 │                   <p className="text-xs text-muted-foreground mb-1">A custom build for</p>
 218 │                   <p className="font-semibold">Pavittar Pharmaceuticals</p>
 219 │                   <p className="text-xs text-muted-foreground mt-2">A Rishul Chanana Production</p>
 220 │                 </div>
 221 │               </div>
 222 │             </div>
 223 │           </div>
 224 │         </ScrollArea>
 225 │       </aside>
 226 │     </>
 227 │   );
 228 │ };
 229 │ 
 230 │ export default Sidebar;
 231 │ import React from "react";
 232 │ import { NavLink } from "react-router-dom";
     ·          ───┬───
     ·             ╰── `NavLink` redefined here
 233 │ import {
 234 │   Home,
 235 │   Users,
     ╰────
  × the name `Users` is defined multiple times
     ╭─[/home/runner/workspace/src/components/layout/Sidebar.tsx:6:1]
   3 │ import { NavLink } from "react-router-dom";
   4 │ import {
   5 │   LayoutDashboard,
   6 │   Users,
     ·   ──┬──
     ·     ╰── previous definition of `Users` here
   7 │   PackageSearch,
   8 │   ClipboardList,
   9 │   BarChart3,
  10 │   Settings,
  11 │   BookUser,
  12 │   MessageSquare,
  13 │   CalendarClock,
  14 │   Building2,
  15 │   TrendingUp,
  16 │   X
  17 │ } from "lucide-react";
  18 │ import { Button } from "@/components/ui/button";
  19 │ import { ScrollArea } from "@/components/ui/scroll-area";
  20 │ import { Separator } from "@/components/ui/separator";
  21 │ import { cn } from "@/lib/utils";
  22 │ import { useIsMobile } from "@/hooks/use-mobile";
  23 │ 
  24 │ interface SidebarProps {
  25 │   isOpen: boolean;
  26 │   onClose: () => void;
  27 │ }
  28 │ 
  29 │ interface SidebarItem {
  30 │   title: string;
  31 │   icon: React.ReactNode;
  32 │   href: string;
  33 │ }
  34 │ 
  35 │ const mainItems: SidebarItem[] = [
  36 │   {
  37 │     title: "Dashboard",
  38 │     icon: <LayoutDashboard className="h-5 w-5" />,
  39 │     href: "/",
  40 │   },
  41 │   {
  42 │     title: "Leads",
  43 │     icon: <Users className="h-5 w-5" />,
  44 │     href: "/leads",
  45 │   },
  46 │   {
  47 │     title: "Manufacturers",
  48 │     icon: <Building2 className="h-5 w-5" />,
  49 │     href: "/manufacturers",
  50 │   },
  51 │   {
  52 │     title: "Orders",
  53 │     icon: <PackageSearch className="h-5 w-5" />,
  54 │     href: "/orders",
  55 │   },
  56 │   {
  57 │     title: "Documents",
  58 │     icon: <ClipboardList className="h-5 w-5" />,
  59 │     href: "/documents",
  60 │   },
  61 │ ];
  62 │ 
  63 │ const salesItems: SidebarItem[] = [
  64 │   {
  65 │     title: "Calendar",
  66 │     icon: <CalendarClock className="h-5 w-5" />,
  67 │     href: "/calendar",
  68 │   },
  69 │   {
  70 │     title: "Contacts",
  71 │     icon: <BookUser className="h-5 w-5" />,
  72 │     href: "/contacts",
  73 │   },
  74 │   {
  75 │     title: "Messages",
  76 │     icon: <MessageSquare className="h-5 w-5" />,
  77 │     href: "/messages",
  78 │   },
  79 │ ];
  80 │ 
  81 │ const insightItems: SidebarItem[] = [
  82 │   {
  83 │     title: "Performance",
  84 │     icon: <TrendingUp className="h-5 w-5" />,
  85 │     href: "/performance",
  86 │   },
  87 │   {
  88 │     title: "Reports",
  89 │     icon: <BarChart3 className="h-5 w-5" />,
  90 │     href: "/reports",
  91 │   },
  92 │   {
  93 │     title: "Settings",
  94 │     icon: <Settings className="h-5 w-5" />,
  95 │     href: "/settings",
  96 │   },
  97 │ ];
  98 │ 
  99 │ const Sidebar: React.FC<SidebarProps> = ({ isOpen, onClose }) => {
 100 │   const isMobile = useIsMobile();
 101 │   
 102 │   return (
 103 │     <>
 104 │       {isMobile && isOpen && (
 105 │         <div 
 106 │           className="fixed inset-0 bg-black/30 z-40 transition-opacity duration-300"
 107 │           onClick={onClose}
 108 │         />
 109 │       )}
 110 │       <aside
 111 │         className={cn(
 112 │           "fixed top-0 bottom-0 z-50 w-[270px] border-r bg-card transition-transform duration-300 ease-in-out",
 113 │           isOpen || !isMobile ? "translate-x-0" : "-translate-x-full"
 114 │         )}
 115 │       >
 116 │         <div className="flex h-16 items-center px-4 border-b">
 117 │           <div className="flex items-center gap-2">
 118 │             <div className="inline-flex h-8 w-8 items-center justify-center rounded-md bg-primary">
 119 │               <svg
 120 │                 xmlns="http://www.w3.org/2000/svg"
 121 │                 viewBox="0 0 24 24"
 122 │                 fill="none"
 123 │                 stroke="currentColor"
 124 │                 strokeWidth="2"
 125 │                 strokeLinecap="round"
 126 │                 strokeLinejoin="round"
 127 │                 className="h-5 w-5 text-white"
 128 │               >
 129 │                 <path d="M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z" />
 130 │                 <path d="m9 12 2 2 4-4" />
 131 │               </svg>
 132 │             </div>
 133 │             <span className="text-xl font-bold">Pavittar Pharma</span>
 134 │           </div>
 135 │           
 136 │           {isMobile && (
 137 │             <Button variant="ghost" size="icon" className="ml-auto" onClick={onClose}>
 138 │               <X className="h-5 w-5" />
 139 │             </Button>
 140 │           )}
 141 │         </div>
 142 │         
 143 │         <ScrollArea className="h-[calc(100vh-64px)] scrollbar-fancy">
 144 │           <div className="space-y-4 py-4">
 145 │             <div className="px-4 py-2">
 146 │               <h2 className="px-2 text-xs font-semibold tracking-tight text-muted-foreground">
 147 │                 MAIN
 148 │               </h2>
 149 │               <div className="mt-2 space-y-1">
 150 │                 {mainItems.map((item) => (
 151 │                   <NavLink
 152 │                     key={item.href}
 153 │                     to={item.href}
 154 │                     className={({ isActive }) =>
 155 │                       cn("nav-item", isActive && "nav-item-active")
 156 │                     }
 157 │                     onClick={isMobile ? onClose : undefined}
 158 │                   >
 159 │                     {item.icon}
 160 │                     <span>{item.title}</span>
 161 │                   </NavLink>
 162 │                 ))}
 163 │               </div>
 164 │             </div>
 165 │             
 166 │             <Separator className="mx-4" />
 167 │             
 168 │             <div className="px-4 py-2">
 169 │               <h2 className="px-2 text-xs font-semibold tracking-tight text-muted-foreground">
 170 │                 SALES TOOLS
 171 │               </h2>
 172 │               <div className="mt-2 space-y-1">
 173 │                 {salesItems.map((item) => (
 174 │                   <NavLink
 175 │                     key={item.href}
 176 │                     to={item.href}
 177 │                     className={({ isActive }) =>
 178 │                       cn("nav-item", isActive && "nav-item-active")
 179 │                     }
 180 │                     onClick={isMobile ? onClose : undefined}
 181 │                   >
 182 │                     {item.icon}
 183 │                     <span>{item.title}</span>
 184 │                   </NavLink>
 185 │                 ))}
 186 │               </div>
 187 │             </div>
 188 │             
 189 │             <Separator className="mx-4" />
 190 │             
 191 │             <div className="px-4 py-2">
 192 │               <h2 className="px-2 text-xs font-semibold tracking-tight text-muted-foreground">
 193 │                 INSIGHTS
 194 │               </h2>
 195 │               <div className="mt-2 space-y-1">
 196 │                 {insightItems.map((item) => (
 197 │                   <NavLink
 198 │                     key={item.href}
 199 │                     to={item.href}
 200 │                     className={({ isActive }) =>
 201 │                       cn("nav-item", isActive && "nav-item-active")
 202 │                     }
 203 │                     onClick={isMobile ? onClose : undefined}
 204 │                   >
 205 │                     {item.icon}
 206 │                     <span>{item.title}</span>
 207 │                   </NavLink>
 208 │                 ))}
 209 │               </div>
 210 │             </div>
 211 │             
 212 │             <Separator className="mx-4" />
 213 │             
 214 │             <div className="p-4 mt-6">
 215 │               <div className="rounded-md bg-muted p-3">
 216 │                 <div className="flex flex-col items-center text-center">
 217 │                   <p className="text-xs text-muted-foreground mb-1">A custom build for</p>
 218 │                   <p className="font-semibold">Pavittar Pharmaceuticals</p>
 219 │                   <p className="text-xs text-muted-foreground mt-2">A Rishul Chanana Production</p>
 220 │                 </div>
 221 │               </div>
 222 │             </div>
 223 │           </div>
 224 │         </ScrollArea>
 225 │       </aside>
 226 │     </>
 227 │   );
 228 │ };
 229 │ 
 230 │ export default Sidebar;
 231 │ import React from "react";
 232 │ import { NavLink } from "react-router-dom";
 233 │ import {
 234 │   Home,
 235 │   Users,
     ·   ──┬──
     ·     ╰── `Users` redefined here
 236 │   UserCog,
 237 │   Factory,
 238 │   ShoppingBag,
     ╰────
  × the name `Settings` is defined multiple times
     ╭─[/home/runner/workspace/src/components/layout/Sidebar.tsx:10:1]
   7 │   PackageSearch,
   8 │   ClipboardList,
   9 │   BarChart3,
  10 │   Settings,
     ·   ────┬───
     ·       ╰── previous definition of `Settings` here
  11 │   BookUser,
  12 │   MessageSquare,
  13 │   CalendarClock,
  14 │   Building2,
  15 │   TrendingUp,
  16 │   X
  17 │ } from "lucide-react";
  18 │ import { Button } from "@/components/ui/button";
  19 │ import { ScrollArea } from "@/components/ui/scroll-area";
  20 │ import { Separator } from "@/components/ui/separator";
  21 │ import { cn } from "@/lib/utils";
  22 │ import { useIsMobile } from "@/hooks/use-mobile";
  23 │ 
  24 │ interface SidebarProps {
  25 │   isOpen: boolean;
  26 │   onClose: () => void;
  27 │ }
  28 │ 
  29 │ interface SidebarItem {
  30 │   title: string;
  31 │   icon: React.ReactNode;
  32 │   href: string;
  33 │ }
  34 │ 
  35 │ const mainItems: SidebarItem[] = [
  36 │   {
  37 │     title: "Dashboard",
  38 │     icon: <LayoutDashboard className="h-5 w-5" />,
  39 │     href: "/",
  40 │   },
  41 │   {
  42 │     title: "Leads",
  43 │     icon: <Users className="h-5 w-5" />,
  44 │     href: "/leads",
  45 │   },
  46 │   {
  47 │     title: "Manufacturers",
  48 │     icon: <Building2 className="h-5 w-5" />,
  49 │     href: "/manufacturers",
  50 │   },
  51 │   {
  52 │     title: "Orders",
  53 │     icon: <PackageSearch className="h-5 w-5" />,
  54 │     href: "/orders",
  55 │   },
  56 │   {
  57 │     title: "Documents",
  58 │     icon: <ClipboardList className="h-5 w-5" />,
  59 │     href: "/documents",
  60 │   },
  61 │ ];
  62 │ 
  63 │ const salesItems: SidebarItem[] = [
  64 │   {
  65 │     title: "Calendar",
  66 │     icon: <CalendarClock className="h-5 w-5" />,
  67 │     href: "/calendar",
  68 │   },
  69 │   {
  70 │     title: "Contacts",
  71 │     icon: <BookUser className="h-5 w-5" />,
  72 │     href: "/contacts",
  73 │   },
  74 │   {
  75 │     title: "Messages",
  76 │     icon: <MessageSquare className="h-5 w-5" />,
  77 │     href: "/messages",
  78 │   },
  79 │ ];
  80 │ 
  81 │ const insightItems: SidebarItem[] = [
  82 │   {
  83 │     title: "Performance",
  84 │     icon: <TrendingUp className="h-5 w-5" />,
  85 │     href: "/performance",
  86 │   },
  87 │   {
  88 │     title: "Reports",
  89 │     icon: <BarChart3 className="h-5 w-5" />,
  90 │     href: "/reports",
  91 │   },
  92 │   {
  93 │     title: "Settings",
  94 │     icon: <Settings className="h-5 w-5" />,
  95 │     href: "/settings",
  96 │   },
  97 │ ];
  98 │ 
  99 │ const Sidebar: React.FC<SidebarProps> = ({ isOpen, onClose }) => {
 100 │   const isMobile = useIsMobile();
 101 │   
 102 │   return (
 103 │     <>
 104 │       {isMobile && isOpen && (
 105 │         <div 
 106 │           className="fixed inset-0 bg-black/30 z-40 transition-opacity duration-300"
 107 │           onClick={onClose}
 108 │         />
 109 │       )}
 110 │       <aside
 111 │         className={cn(
 112 │           "fixed top-0 bottom-0 z-50 w-[270px] border-r bg-card transition-transform duration-300 ease-in-out",
 113 │           isOpen || !isMobile ? "translate-x-0" : "-translate-x-full"
 114 │         )}
 115 │       >
 116 │         <div className="flex h-16 items-center px-4 border-b">
 117 │           <div className="flex items-center gap-2">
 118 │             <div className="inline-flex h-8 w-8 items-center justify-center rounded-md bg-primary">
 119 │               <svg
 120 │                 xmlns="http://www.w3.org/2000/svg"
 121 │                 viewBox="0 0 24 24"
 122 │                 fill="none"
 123 │                 stroke="currentColor"
 124 │                 strokeWidth="2"
 125 │                 strokeLinecap="round"
 126 │                 strokeLinejoin="round"
 127 │                 className="h-5 w-5 text-white"
 128 │               >
 129 │                 <path d="M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z" />
 130 │                 <path d="m9 12 2 2 4-4" />
 131 │               </svg>
 132 │             </div>
 133 │             <span className="text-xl font-bold">Pavittar Pharma</span>
 134 │           </div>
 135 │           
 136 │           {isMobile && (
 137 │             <Button variant="ghost" size="icon" className="ml-auto" onClick={onClose}>
 138 │               <X className="h-5 w-5" />
 139 │             </Button>
 140 │           )}
 141 │         </div>
 142 │         
 143 │         <ScrollArea className="h-[calc(100vh-64px)] scrollbar-fancy">
 144 │           <div className="space-y-4 py-4">
 145 │             <div className="px-4 py-2">
 146 │               <h2 className="px-2 text-xs font-semibold tracking-tight text-muted-foreground">
 147 │                 MAIN
 148 │               </h2>
 149 │               <div className="mt-2 space-y-1">
 150 │                 {mainItems.map((item) => (
 151 │                   <NavLink
 152 │                     key={item.href}
 153 │                     to={item.href}
 154 │                     className={({ isActive }) =>
 155 │                       cn("nav-item", isActive && "nav-item-active")
 156 │                     }
 157 │                     onClick={isMobile ? onClose : undefined}
 158 │                   >
 159 │                     {item.icon}
 160 │                     <span>{item.title}</span>
 161 │                   </NavLink>
 162 │                 ))}
 163 │               </div>
 164 │             </div>
 165 │             
 166 │             <Separator className="mx-4" />
 167 │             
 168 │             <div className="px-4 py-2">
 169 │               <h2 className="px-2 text-xs font-semibold tracking-tight text-muted-foreground">
 170 │                 SALES TOOLS
 171 │               </h2>
 172 │               <div className="mt-2 space-y-1">
 173 │                 {salesItems.map((item) => (
 174 │                   <NavLink
 175 │                     key={item.href}
 176 │                     to={item.href}
 177 │                     className={({ isActive }) =>
 178 │                       cn("nav-item", isActive && "nav-item-active")
 179 │                     }
 180 │                     onClick={isMobile ? onClose : undefined}
 181 │                   >
 182 │                     {item.icon}
 183 │                     <span>{item.title}</span>
 184 │                   </NavLink>
 185 │                 ))}
 186 │               </div>
 187 │             </div>
 188 │             
 189 │             <Separator className="mx-4" />
 190 │             
 191 │             <div className="px-4 py-2">
 192 │               <h2 className="px-2 text-xs font-semibold tracking-tight text-muted-foreground">
 193 │                 INSIGHTS
 194 │               </h2>
 195 │               <div className="mt-2 space-y-1">
 196 │                 {insightItems.map((item) => (
 197 │                   <NavLink
 198 │                     key={item.href}
 199 │                     to={item.href}
 200 │                     className={({ isActive }) =>
 201 │                       cn("nav-item", isActive && "nav-item-active")
 202 │                     }
 203 │                     onClick={isMobile ? onClose : undefined}
 204 │                   >
 205 │                     {item.icon}
 206 │                     <span>{item.title}</span>
 207 │                   </NavLink>
 208 │                 ))}
 209 │               </div>
 210 │             </div>
 211 │             
 212 │             <Separator className="mx-4" />
 213 │             
 214 │             <div className="p-4 mt-6">
 215 │               <div className="rounded-md bg-muted p-3">
 216 │                 <div className="flex flex-col items-center text-center">
 217 │                   <p className="text-xs text-muted-foreground mb-1">A custom build for</p>
 218 │                   <p className="font-semibold">Pavittar Pharmaceuticals</p>
 219 │                   <p className="text-xs text-muted-foreground mt-2">A Rishul Chanana Production</p>
 220 │                 </div>
 221 │               </div>
 222 │             </div>
 223 │           </div>
 224 │         </ScrollArea>
 225 │       </aside>
 226 │     </>
 227 │   );
 228 │ };
 229 │ 
 230 │ export default Sidebar;
 231 │ import React from "react";
 232 │ import { NavLink } from "react-router-dom";
 233 │ import {
 234 │   Home,
 235 │   Users,
 236 │   UserCog,
 237 │   Factory,
 238 │   ShoppingBag,
 239 │   BarChart2,
 240 │   FileText,
 241 │   Settings,
     ·   ────┬───
     ·       ╰── `Settings` redefined here
 242 │ } from "lucide-react";
 243 │ import { cn } from "@/lib/utils";
 244 │ import { Button } from "@/components/ui/button";
     ╰────
  × the name `cn` is defined multiple times
     ╭─[/home/runner/workspace/src/components/layout/Sidebar.tsx:21:1]
  18 │ import { Button } from "@/components/ui/button";
  19 │ import { ScrollArea } from "@/components/ui/scroll-area";
  20 │ import { Separator } from "@/components/ui/separator";
  21 │ import { cn } from "@/lib/utils";
     ·          ─┬
     ·           ╰── previous definition of `cn` here
  22 │ import { useIsMobile } from "@/hooks/use-mobile";
  23 │ 
  24 │ interface SidebarProps {
  25 │   isOpen: boolean;
  26 │   onClose: () => void;
  27 │ }
  28 │ 
  29 │ interface SidebarItem {
  30 │   title: string;
  31 │   icon: React.ReactNode;
  32 │   href: string;
  33 │ }
  34 │ 
  35 │ const mainItems: SidebarItem[] = [
  36 │   {
  37 │     title: "Dashboard",
  38 │     icon: <LayoutDashboard className="h-5 w-5" />,
  39 │     href: "/",
  40 │   },
  41 │   {
  42 │     title: "Leads",
  43 │     icon: <Users className="h-5 w-5" />,
  44 │     href: "/leads",
  45 │   },
  46 │   {
  47 │     title: "Manufacturers",
  48 │     icon: <Building2 className="h-5 w-5" />,
  49 │     href: "/manufacturers",
  50 │   },
  51 │   {
  52 │     title: "Orders",
  53 │     icon: <PackageSearch className="h-5 w-5" />,
  54 │     href: "/orders",
  55 │   },
  56 │   {
  57 │     title: "Documents",
  58 │     icon: <ClipboardList className="h-5 w-5" />,
  59 │     href: "/documents",
  60 │   },
  61 │ ];
  62 │ 
  63 │ const salesItems: SidebarItem[] = [
  64 │   {
  65 │     title: "Calendar",
  66 │     icon: <CalendarClock className="h-5 w-5" />,
  67 │     href: "/calendar",
  68 │   },
  69 │   {
  70 │     title: "Contacts",
  71 │     icon: <BookUser className="h-5 w-5" />,
  72 │     href: "/contacts",
  73 │   },
  74 │   {
  75 │     title: "Messages",
  76 │     icon: <MessageSquare className="h-5 w-5" />,
  77 │     href: "/messages",
  78 │   },
  79 │ ];
  80 │ 
  81 │ const insightItems: SidebarItem[] = [
  82 │   {
  83 │     title: "Performance",
  84 │     icon: <TrendingUp className="h-5 w-5" />,
  85 │     href: "/performance",
  86 │   },
  87 │   {
  88 │     title: "Reports",
  89 │     icon: <BarChart3 className="h-5 w-5" />,
  90 │     href: "/reports",
  91 │   },
  92 │   {
  93 │     title: "Settings",
  94 │     icon: <Settings className="h-5 w-5" />,
  95 │     href: "/settings",
  96 │   },
  97 │ ];
  98 │ 
  99 │ const Sidebar: React.FC<SidebarProps> = ({ isOpen, onClose }) => {
 100 │   const isMobile = useIsMobile();
 101 │   
 102 │   return (
 103 │     <>
 104 │       {isMobile && isOpen && (
 105 │         <div 
 106 │           className="fixed inset-0 bg-black/30 z-40 transition-opacity duration-300"
 107 │           onClick={onClose}
 108 │         />
 109 │       )}
 110 │       <aside
 111 │         className={cn(
 112 │           "fixed top-0 bottom-0 z-50 w-[270px] border-r bg-card transition-transform duration-300 ease-in-out",
 113 │           isOpen || !isMobile ? "translate-x-0" : "-translate-x-full"
 114 │         )}
 115 │       >
 116 │         <div className="flex h-16 items-center px-4 border-b">
 117 │           <div className="flex items-center gap-2">
 118 │             <div className="inline-flex h-8 w-8 items-center justify-center rounded-md bg-primary">
 119 │               <svg
 120 │                 xmlns="http://www.w3.org/2000/svg"
 121 │                 viewBox="0 0 24 24"
 122 │                 fill="none"
 123 │                 stroke="currentColor"
 124 │                 strokeWidth="2"
 125 │                 strokeLinecap="round"
 126 │                 strokeLinejoin="round"
 127 │                 className="h-5 w-5 text-white"
 128 │               >
 129 │                 <path d="M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z" />
 130 │                 <path d="m9 12 2 2 4-4" />
 131 │               </svg>
 132 │             </div>
 133 │             <span className="text-xl font-bold">Pavittar Pharma</span>
 134 │           </div>
 135 │           
 136 │           {isMobile && (
 137 │             <Button variant="ghost" size="icon" className="ml-auto" onClick={onClose}>
 138 │               <X className="h-5 w-5" />
 139 │             </Button>
 140 │           )}
 141 │         </div>
 142 │         
 143 │         <ScrollArea className="h-[calc(100vh-64px)] scrollbar-fancy">
 144 │           <div className="space-y-4 py-4">
 145 │             <div className="px-4 py-2">
 146 │               <h2 className="px-2 text-xs font-semibold tracking-tight text-muted-foreground">
 147 │                 MAIN
 148 │               </h2>
 149 │               <div className="mt-2 space-y-1">
 150 │                 {mainItems.map((item) => (
 151 │                   <NavLink
 152 │                     key={item.href}
 153 │                     to={item.href}
 154 │                     className={({ isActive }) =>
 155 │                       cn("nav-item", isActive && "nav-item-active")
 156 │                     }
 157 │                     onClick={isMobile ? onClose : undefined}
 158 │                   >
 159 │                     {item.icon}
 160 │                     <span>{item.title}</span>
 161 │                   </NavLink>
 162 │                 ))}
 163 │               </div>
 164 │             </div>
 165 │             
 166 │             <Separator className="mx-4" />
 167 │             
 168 │             <div className="px-4 py-2">
 169 │               <h2 className="px-2 text-xs font-semibold tracking-tight text-muted-foreground">
 170 │                 SALES TOOLS
 171 │               </h2>
 172 │               <div className="mt-2 space-y-1">
 173 │                 {salesItems.map((item) => (
 174 │                   <NavLink
 175 │                     key={item.href}
 176 │                     to={item.href}
 177 │                     className={({ isActive }) =>
 178 │                       cn("nav-item", isActive && "nav-item-active")
 179 │                     }
 180 │                     onClick={isMobile ? onClose : undefined}
 181 │                   >
 182 │                     {item.icon}
 183 │                     <span>{item.title}</span>
 184 │                   </NavLink>
 185 │                 ))}
 186 │               </div>
 187 │             </div>
 188 │             
 189 │             <Separator className="mx-4" />
 190 │             
 191 │             <div className="px-4 py-2">
 192 │               <h2 className="px-2 text-xs font-semibold tracking-tight text-muted-foreground">
 193 │                 INSIGHTS
 194 │               </h2>
 195 │               <div className="mt-2 space-y-1">
 196 │                 {insightItems.map((item) => (
 197 │                   <NavLink
 198 │                     key={item.href}
 199 │                     to={item.href}
 200 │                     className={({ isActive }) =>
 201 │                       cn("nav-item", isActive && "nav-item-active")
 202 │                     }
 203 │                     onClick={isMobile ? onClose : undefined}
 204 │                   >
 205 │                     {item.icon}
 206 │                     <span>{item.title}</span>
 207 │                   </NavLink>
 208 │                 ))}
 209 │               </div>
 210 │             </div>
 211 │             
 212 │             <Separator className="mx-4" />
 213 │             
 214 │             <div className="p-4 mt-6">
 215 │               <div className="rounded-md bg-muted p-3">
 216 │                 <div className="flex flex-col items-center text-center">
 217 │                   <p className="text-xs text-muted-foreground mb-1">A custom build for</p>
 218 │                   <p className="font-semibold">Pavittar Pharmaceuticals</p>
 219 │                   <p className="text-xs text-muted-foreground mt-2">A Rishul Chanana Production</p>
 220 │                 </div>
 221 │               </div>
 222 │             </div>
 223 │           </div>
 224 │         </ScrollArea>
 225 │       </aside>
 226 │     </>
 227 │   );
 228 │ };
 229 │ 
 230 │ export default Sidebar;
 231 │ import React from "react";
 232 │ import { NavLink } from "react-router-dom";
 233 │ import {
 234 │   Home,
 235 │   Users,
 236 │   UserCog,
 237 │   Factory,
 238 │   ShoppingBag,
 239 │   BarChart2,
 240 │   FileText,
 241 │   Settings,
 242 │ } from "lucide-react";
 243 │ import { cn } from "@/lib/utils";
     ·          ─┬
     ·           ╰── `cn` redefined here
 244 │ import { Button } from "@/components/ui/button";
 245 │ 
 246 │ interface SidebarProps {
     ╰────
  × the name `Button` is defined multiple times
     ╭─[/home/runner/workspace/src/components/layout/Sidebar.tsx:18:1]
  15 │   TrendingUp,
  16 │   X
  17 │ } from "lucide-react";
  18 │ import { Button } from "@/components/ui/button";
     ·          ───┬──
     ·             ╰── previous definition of `Button` here
  19 │ import { ScrollArea } from "@/components/ui/scroll-area";
  20 │ import { Separator } from "@/components/ui/separator";
  21 │ import { cn } from "@/lib/utils";
  22 │ import { useIsMobile } from "@/hooks/use-mobile";
  23 │ 
  24 │ interface SidebarProps {
  25 │   isOpen: boolean;
  26 │   onClose: () => void;
  27 │ }
  28 │ 
  29 │ interface SidebarItem {
  30 │   title: string;
  31 │   icon: React.ReactNode;
  32 │   href: string;
  33 │ }
  34 │ 
  35 │ const mainItems: SidebarItem[] = [
  36 │   {
  37 │     title: "Dashboard",
  38 │     icon: <LayoutDashboard className="h-5 w-5" />,
  39 │     href: "/",
  40 │   },
  41 │   {
  42 │     title: "Leads",
  43 │     icon: <Users className="h-5 w-5" />,
  44 │     href: "/leads",
  45 │   },
  46 │   {
  47 │     title: "Manufacturers",
  48 │     icon: <Building2 className="h-5 w-5" />,
  49 │     href: "/manufacturers",
  50 │   },
  51 │   {
  52 │     title: "Orders",
  53 │     icon: <PackageSearch className="h-5 w-5" />,
  54 │     href: "/orders",
  55 │   },
  56 │   {
  57 │     title: "Documents",
  58 │     icon: <ClipboardList className="h-5 w-5" />,
  59 │     href: "/documents",
  60 │   },
  61 │ ];
  62 │ 
  63 │ const salesItems: SidebarItem[] = [
  64 │   {
  65 │     title: "Calendar",
  66 │     icon: <CalendarClock className="h-5 w-5" />,
  67 │     href: "/calendar",
  68 │   },
  69 │   {
  70 │     title: "Contacts",
  71 │     icon: <BookUser className="h-5 w-5" />,
  72 │     href: "/contacts",
  73 │   },
  74 │   {
  75 │     title: "Messages",
  76 │     icon: <MessageSquare className="h-5 w-5" />,
  77 │     href: "/messages",
  78 │   },
  79 │ ];
  80 │ 
  81 │ const insightItems: SidebarItem[] = [
  82 │   {
  83 │     title: "Performance",
  84 │     icon: <TrendingUp className="h-5 w-5" />,
  85 │     href: "/performance",
  86 │   },
  87 │   {
  88 │     title: "Reports",
  89 │     icon: <BarChart3 className="h-5 w-5" />,
  90 │     href: "/reports",
  91 │   },
  92 │   {
  93 │     title: "Settings",
  94 │     icon: <Settings className="h-5 w-5" />,
  95 │     href: "/settings",
  96 │   },
  97 │ ];
  98 │ 
  99 │ const Sidebar: React.FC<SidebarProps> = ({ isOpen, onClose }) => {
 100 │   const isMobile = useIsMobile();
 101 │   
 102 │   return (
 103 │     <>
 104 │       {isMobile && isOpen && (
 105 │         <div 
 106 │           className="fixed inset-0 bg-black/30 z-40 transition-opacity duration-300"
 107 │           onClick={onClose}
 108 │         />
 109 │       )}
 110 │       <aside
 111 │         className={cn(
 112 │           "fixed top-0 bottom-0 z-50 w-[270px] border-r bg-card transition-transform duration-300 ease-in-out",
 113 │           isOpen || !isMobile ? "translate-x-0" : "-translate-x-full"
 114 │         )}
 115 │       >
 116 │         <div className="flex h-16 items-center px-4 border-b">
 117 │           <div className="flex items-center gap-2">
 118 │             <div className="inline-flex h-8 w-8 items-center justify-center rounded-md bg-primary">
 119 │               <svg
 120 │                 xmlns="http://www.w3.org/2000/svg"
 121 │                 viewBox="0 0 24 24"
 122 │                 fill="none"
 123 │                 stroke="currentColor"
 124 │                 strokeWidth="2"
 125 │                 strokeLinecap="round"
 126 │                 strokeLinejoin="round"
 127 │                 className="h-5 w-5 text-white"
 128 │               >
 129 │                 <path d="M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z" />
 130 │                 <path d="m9 12 2 2 4-4" />
 131 │               </svg>
 132 │             </div>
 133 │             <span className="text-xl font-bold">Pavittar Pharma</span>
 134 │           </div>
 135 │           
 136 │           {isMobile && (
 137 │             <Button variant="ghost" size="icon" className="ml-auto" onClick={onClose}>
 138 │               <X className="h-5 w-5" />
 139 │             </Button>
 140 │           )}
 141 │         </div>
 142 │         
 143 │         <ScrollArea className="h-[calc(100vh-64px)] scrollbar-fancy">
 144 │           <div className="space-y-4 py-4">
 145 │             <div className="px-4 py-2">
 146 │               <h2 className="px-2 text-xs font-semibold tracking-tight text-muted-foreground">
 147 │                 MAIN
 148 │               </h2>
 149 │               <div className="mt-2 space-y-1">
 150 │                 {mainItems.map((item) => (
 151 │                   <NavLink
 152 │                     key={item.href}
 153 │                     to={item.href}
 154 │                     className={({ isActive }) =>
 155 │                       cn("nav-item", isActive && "nav-item-active")
 156 │                     }
 157 │                     onClick={isMobile ? onClose : undefined}
 158 │                   >
 159 │                     {item.icon}
 160 │                     <span>{item.title}</span>
 161 │                   </NavLink>
 162 │                 ))}
 163 │               </div>
 164 │             </div>
 165 │             
 166 │             <Separator className="mx-4" />
 167 │             
 168 │             <div className="px-4 py-2">
 169 │               <h2 className="px-2 text-xs font-semibold tracking-tight text-muted-foreground">
 170 │                 SALES TOOLS
 171 │               </h2>
 172 │               <div className="mt-2 space-y-1">
 173 │                 {salesItems.map((item) => (
 174 │                   <NavLink
 175 │                     key={item.href}
 176 │                     to={item.href}
 177 │                     className={({ isActive }) =>
 178 │                       cn("nav-item", isActive && "nav-item-active")
 179 │                     }
 180 │                     onClick={isMobile ? onClose : undefined}
 181 │                   >
 182 │                     {item.icon}
 183 │                     <span>{item.title}</span>
 184 │                   </NavLink>
 185 │                 ))}
 186 │               </div>
 187 │             </div>
 188 │             
 189 │             <Separator className="mx-4" />
 190 │             
 191 │             <div className="px-4 py-2">
 192 │               <h2 className="px-2 text-xs font-semibold tracking-tight text-muted-foreground">
 193 │                 INSIGHTS
 194 │               </h2>
 195 │               <div className="mt-2 space-y-1">
 196 │                 {insightItems.map((item) => (
 197 │                   <NavLink
 198 │                     key={item.href}
 199 │                     to={item.href}
 200 │                     className={({ isActive }) =>
 201 │                       cn("nav-item", isActive && "nav-item-active")
 202 │                     }
 203 │                     onClick={isMobile ? onClose : undefined}
 204 │                   >
 205 │                     {item.icon}
 206 │                     <span>{item.title}</span>
 207 │                   </NavLink>
 208 │                 ))}
 209 │               </div>
 210 │             </div>
 211 │             
 212 │             <Separator className="mx-4" />
 213 │             
 214 │             <div className="p-4 mt-6">
 215 │               <div className="rounded-md bg-muted p-3">
 216 │                 <div className="flex flex-col items-center text-center">
 217 │                   <p className="text-xs text-muted-foreground mb-1">A custom build for</p>
 218 │                   <p className="font-semibold">Pavittar Pharmaceuticals</p>
 219 │                   <p className="text-xs text-muted-foreground mt-2">A Rishul Chanana Production</p>
 220 │                 </div>
 221 │               </div>
 222 │             </div>
 223 │           </div>
 224 │         </ScrollArea>
 225 │       </aside>
 226 │     </>
 227 │   );
 228 │ };
 229 │ 
 230 │ export default Sidebar;
 231 │ import React from "react";
 232 │ import { NavLink } from "react-router-dom";
 233 │ import {
 234 │   Home,
 235 │   Users,
 236 │   UserCog,
 237 │   Factory,
 238 │   ShoppingBag,
 239 │   BarChart2,
 240 │   FileText,
 241 │   Settings,
 242 │ } from "lucide-react";
 243 │ import { cn } from "@/lib/utils";
 244 │ import { Button } from "@/components/ui/button";
     ·          ───┬──
     ·             ╰── `Button` redefined here
 245 │ 
 246 │ interface SidebarProps {
 247 │   className?: string;
     ╰────
  × the name `Sidebar` is defined multiple times
     ╭─[/home/runner/workspace/src/components/layout/Sidebar.tsx:99:1]
  96 │   },
  97 │ ];
  98 │ 
  99 │ const Sidebar: React.FC<SidebarProps> = ({ isOpen, onClose }) => {
     ·       ───┬───
     ·          ╰── previous definition of `Sidebar` here
 100 │   const isMobile = useIsMobile();
 101 │   
 102 │   return (
 103 │     <>
 104 │       {isMobile && isOpen && (
 105 │         <div 
 106 │           className="fixed inset-0 bg-black/30 z-40 transition-opacity duration-300"
 107 │           onClick={onClose}
 108 │         />
 109 │       )}
 110 │       <aside
 111 │         className={cn(
 112 │           "fixed top-0 bottom-0 z-50 w-[270px] border-r bg-card transition-transform duration-300 ease-in-out",
 113 │           isOpen || !isMobile ? "translate-x-0" : "-translate-x-full"
 114 │         )}
 115 │       >
 116 │         <div className="flex h-16 items-center px-4 border-b">
 117 │           <div className="flex items-center gap-2">
 118 │             <div className="inline-flex h-8 w-8 items-center justify-center rounded-md bg-primary">
 119 │               <svg
 120 │                 xmlns="http://www.w3.org/2000/svg"
 121 │                 viewBox="0 0 24 24"
 122 │                 fill="none"
 123 │                 stroke="currentColor"
 124 │                 strokeWidth="2"
 125 │                 strokeLinecap="round"
 126 │                 strokeLinejoin="round"
 127 │                 className="h-5 w-5 text-white"
 128 │               >
 129 │                 <path d="M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z" />
 130 │                 <path d="m9 12 2 2 4-4" />
 131 │               </svg>
 132 │             </div>
 133 │             <span className="text-xl font-bold">Pavittar Pharma</span>
 134 │           </div>
 135 │           
 136 │           {isMobile && (
 137 │             <Button variant="ghost" size="icon" className="ml-auto" onClick={onClose}>
 138 │               <X className="h-5 w-5" />
 139 │             </Button>
 140 │           )}
 141 │         </div>
 142 │         
 143 │         <ScrollArea className="h-[calc(100vh-64px)] scrollbar-fancy">
 144 │           <div className="space-y-4 py-4">
 145 │             <div className="px-4 py-2">
 146 │               <h2 className="px-2 text-xs font-semibold tracking-tight text-muted-foreground">
 147 │                 MAIN
 148 │               </h2>
 149 │               <div className="mt-2 space-y-1">
 150 │                 {mainItems.map((item) => (
 151 │                   <NavLink
 152 │                     key={item.href}
 153 │                     to={item.href}
 154 │                     className={({ isActive }) =>
 155 │                       cn("nav-item", isActive && "nav-item-active")
 156 │                     }
 157 │                     onClick={isMobile ? onClose : undefined}
 158 │                   >
 159 │                     {item.icon}
 160 │                     <span>{item.title}</span>
 161 │                   </NavLink>
 162 │                 ))}
 163 │               </div>
 164 │             </div>
 165 │             
 166 │             <Separator className="mx-4" />
 167 │             
 168 │             <div className="px-4 py-2">
 169 │               <h2 className="px-2 text-xs font-semibold tracking-tight text-muted-foreground">
 170 │                 SALES TOOLS
 171 │               </h2>
 172 │               <div className="mt-2 space-y-1">
 173 │                 {salesItems.map((item) => (
 174 │                   <NavLink
 175 │                     key={item.href}
 176 │                     to={item.href}
 177 │                     className={({ isActive }) =>
 178 │                       cn("nav-item", isActive && "nav-item-active")
 179 │                     }
 180 │                     onClick={isMobile ? onClose : undefined}
 181 │                   >
 182 │                     {item.icon}
 183 │                     <span>{item.title}</span>
 184 │                   </NavLink>
 185 │                 ))}
 186 │               </div>
 187 │             </div>
 188 │             
 189 │             <Separator className="mx-4" />
 190 │             
 191 │             <div className="px-4 py-2">
 192 │               <h2 className="px-2 text-xs font-semibold tracking-tight text-muted-foreground">
 193 │                 INSIGHTS
 194 │               </h2>
 195 │               <div className="mt-2 space-y-1">
 196 │                 {insightItems.map((item) => (
 197 │                   <NavLink
 198 │                     key={item.href}
 199 │                     to={item.href}
 200 │                     className={({ isActive }) =>
 201 │                       cn("nav-item", isActive && "nav-item-active")
 202 │                     }
 203 │                     onClick={isMobile ? onClose : undefined}
 204 │                   >
 205 │                     {item.icon}
 206 │                     <span>{item.title}</span>
 207 │                   </NavLink>
 208 │                 ))}
 209 │               </div>
 210 │             </div>
 211 │             
 212 │             <Separator className="mx-4" />
 213 │             
 214 │             <div className="p-4 mt-6">
 215 │               <div className="rounded-md bg-muted p-3">
 216 │                 <div className="flex flex-col items-center text-center">
 217 │                   <p className="text-xs text-muted-foreground mb-1">A custom build for</p>
 218 │                   <p className="font-semibold">Pavittar Pharmaceuticals</p>
 219 │                   <p className="text-xs text-muted-foreground mt-2">A Rishul Chanana Production</p>
 220 │                 </div>
 221 │               </div>
 222 │             </div>
 223 │           </div>
 224 │         </ScrollArea>
 225 │       </aside>
 226 │     </>
 227 │   );
 228 │ };
 229 │ 
 230 │ export default Sidebar;
 231 │ import React from "react";
 232 │ import { NavLink } from "react-router-dom";
 233 │ import {
 234 │   Home,
 235 │   Users,
 236 │   UserCog,
 237 │   Factory,
 238 │   ShoppingBag,
 239 │   BarChart2,
 240 │   FileText,
 241 │   Settings,
 242 │ } from "lucide-react";
 243 │ import { cn } from "@/lib/utils";
 244 │ import { Button } from "@/components/ui/button";
 245 │ 
 246 │ interface SidebarProps {
 247 │   className?: string;
 248 │ }
 249 │ 
 250 │ export default function Sidebar({ className }: SidebarProps) {
     ·                         ───┬───
     ·                            ╰── `Sidebar` redefined here
 251 │   return (
 252 │     <div className={cn("pb-12 w-60 border-r min-h-screen", className)}>
 253 │       <div className="space-y-4 py-4">
     ╰────
  × the name `default` is exported multiple times
     ╭─[/home/runner/workspace/src/components/layout/Sidebar.tsx:230:1]
 227 │       );
 228 │     };
 229 │     
 230 │     export default Sidebar;
     ·     ───────────┬───────────
     ·                ╰── previous exported here
 231 │     import React from "react";
 232 │     import { NavLink } from "react-router-dom";
 233 │     import {
 234 │       Home,
 235 │       Users,
 236 │       UserCog,
 237 │       Factory,
 238 │       ShoppingBag,
 239 │       BarChart2,
 240 │       FileText,
 241 │       Settings,
 242 │     } from "lucide-react";
 243 │     import { cn } from "@/lib/utils";
 244 │     import { Button } from "@/components/ui/button";
 245 │     
 246 │     interface SidebarProps {
 247 │       className?: string;
 248 │     }
 249 │     
 250 │ ╭─▶ export default function Sidebar({ className }: SidebarProps) {
 251 │ │     return (
 252 │ │       <div className={cn("pb-12 w-60 border-r min-h-screen", className)}>
 253 │ │         <div className="space-y-4 py-4">
 254 │ │           <div className="px-4 py-2">
 255 │ │             <h2 className="mb-2 px-2 text-lg font-semibold tracking-tight">
 256 │ │               Dashboard
 257 │ │             </h2>
 258 │ │             <div className="space-y-1">
 259 │ │               <NavLink to="/" end>
 260 │ │                 {({ isActive }) => (
 261 │ │                   <Button
 262 │ │                     variant={isActive ? "secondary" : "ghost"}
 263 │ │                     className="w-full justify-start"
 264 │ │                   >
 265 │ │                     <Home className="mr-2 h-4 w-4" />
 266 │ │                     Overview
 267 │ │                   </Button>
 268 │ │                 )}
 269 │ │               </NavLink>
 270 │ │             </div>
 271 │ │           </div>
 272 │ │           <div className="px-4 py-2">
 273 │ │             <h2 className="mb-2 px-2 text-lg font-semibold tracking-tight">
 274 │ │               Sales & Leads
 275 │ │             </h2>
 276 │ │             <div className="space-y-1">
 277 │ │               <NavLink to="/leads">
 278 │ │                 {({ isActive }) => (
 279 │ │                   <Button
 280 │ │                     variant={isActive ? "secondary" : "ghost"}
 281 │ │                     className="w-full justify-start"
 282 │ │                   >
 283 │ │                     <Users className="mr-2 h-4 w-4" />
 284 │ │                     Leads
 285 │ │                   </Button>
 286 │ │                 )}
 287 │ │               </NavLink>
 288 │ │               <NavLink to="/lead-management">
 289 │ │                 {({ isActive }) => (
 290 │ │                   <Button
 291 │ │                     variant={isActive ? "secondary" : "ghost"}
 292 │ │                     className="w-full justify-start"
 293 │ │                   >
 294 │ │                     <UserCog className="mr-2 h-4 w-4" />
 295 │ │                     Lead Management
 296 │ │                   </Button>
 297 │ │                 )}
 298 │ │               </NavLink>
 299 │ │               <NavLink to="/manufacturers">
 300 │ │                 {({ isActive }) => (
 301 │ │                   <Button
 302 │ │                     variant={isActive ? "secondary" : "ghost"}
 303 │ │                     className="w-full justify-start"
 304 │ │                   >
 305 │ │                     <Factory className="mr-2 h-4 w-4" />
 306 │ │                     Manufacturers
 307 │ │                   </Button>
 308 │ │                 )}
 309 │ │               </NavLink>
 310 │ │               <NavLink to="/orders">
 311 │ │                 {({ isActive }) => (
 312 │ │                   <Button
 313 │ │                     variant={isActive ? "secondary" : "ghost"}
 314 │ │                     className="w-full justify-start"
 315 │ │                   >
 316 │ │                     <ShoppingBag className="mr-2 h-4 w-4" />
 317 │ │                     Orders
 318 │ │                   </Button>
 319 │ │                 )}
 320 │ │               </NavLink>
 321 │ │               <NavLink to="/documents">
 322 │ │                 {({ isActive }) => (
 323 │ │                   <Button
 324 │ │                     variant={isActive ? "secondary" : "ghost"}
 325 │ │                     className="w-full justify-start"
 326 │ │                   >
 327 │ │                     <FileText className="mr-2 h-4 w-4" />
 328 │ │                     Documents
 329 │ │                   </Button>
 330 │ │                 )}
 331 │ │               </NavLink>
 332 │ │             </div>
 333 │ │           </div>
 334 │ │           <div className="px-4 py-2">
 335 │ │             <h2 className="mb-2 px-2 text-lg font-semibold tracking-tight">
 336 │ │               Analytics
 337 │ │             </h2>
 338 │ │             <div className="space-y-1">
 339 │ │               <NavLink to="/performance">
 340 │ │                 {({ isActive }) => (
 341 │ │                   <Button
 342 │ │                     variant={isActive ? "secondary" : "ghost"}
 343 │ │                     className="w-full justify-start"
 344 │ │                   >
 345 │ │                     <BarChart2 className="mr-2 h-4 w-4" />
 346 │ │                     Performance
 347 │ │                   </Button>
 348 │ │                 )}
 349 │ │               </NavLink>
 350 │ │             </div>
 351 │ │           </div>
 352 │ │           <div className="px-4 py-2">
 353 │ │             <h2 className="mb-2 px-2 text-lg font-semibold tracking-tight">
 354 │ │               System
 355 │ │             </h2>
 356 │ │             <div className="space-y-1">
 357 │ │               <NavLink to="/settings">
 358 │ │                 {({ isActive }) => (
 359 │ │                   <Button
 360 │ │                     variant={isActive ? "secondary" : "ghost"}
 361 │ │                     className="w-full justify-start"
 362 │ │                   >
 363 │ │                     <Settings className="mr-2 h-4 w-4" />
 364 │ │                     Settings
 365 │ │                   </Button>
 366 │ │                 )}
 367 │ │               </NavLink>
 368 │ │             </div>
 369 │ │           </div>
 370 │ │         </div>
 371 │ │       </div>
 372 │ │     );
 373 │ ├─▶ }
     · ╰──── exported more than once
     ╰────

Advice:   ☞ Exported identifiers must be unique
/home/runner/workspace/src/components/layout/Sidebar.tsx:3:1
16 |    X
17 |  } from "lucide-react";
18 |  import { Button } from "@/components/ui/button";
   |               ^
19 |  import { ScrollArea } from "@/components/ui/scroll-area";
20 |  import { Separator } from "@/components/ui/separator";